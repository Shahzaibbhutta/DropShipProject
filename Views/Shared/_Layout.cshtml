<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ZAH DROPSHIPPING</title>
    <!-- Bootstrap 5.3.3 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous" />
    <!-- Tailwind CSS via CDN -->
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet" />
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <!-- Google Fonts: Inter -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />
    <!-- Custom CSS -->
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f9fafb;
            color: #1f2937;
        }

        /* Navbar Styling */
        .navbar {
            background: linear-gradient(90deg, #2563eb, #1e40af);
            padding: 1rem 0;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .navbar-brand {
            font-weight: 700;
            font-size: 1.5rem;
            color: #fff !important;
            transition: color 0.3s;
            display: flex;
            align-items: center;
        }

        .navbar-brand:hover {
            color: #facc15 !important;
        }

        .navbar-logo {
            height: 40px;
            width: 40px; /* Ensure equal dimensions for a perfect circle */
            margin-right: 0.5rem;
            border-radius: 50%; /* Make the logo circular */
            object-fit: cover; /* Ensure the image fits within the circular frame */
            border: 2px solid #fff; /* Add a white border for contrast */
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Subtle shadow for depth */
        }

        .nav-link {
            color: #fff !important;
            font-weight: 500;
            transition: color 0.3s;
        }

        .nav-link:hover {
            color: #facc15 !important;
        }

        .navbar-toggler {
            border-color: #fff;
        }

        /* Main Content */
        .main-content {
            min-height: calc(100vh - 200px);
            padding: 2rem 0;
        }

        /* Chatbot Styling */
        #chatbot-container {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 380px; /* Slightly wider for better readability */
            background: #fff;
            border: 1px solid #e5e7eb; /* Subtle border */
            border-radius: 16px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
            display: none;
            flex-direction: column;
            z-index: 1000;
            transform: translateY(20px); /* Initial position for animation */
            animation: slideUp 0.3s ease forwards; /* Slide-up animation on open */
        }

        /* Slide-up animation */
        keyframes slideUp {
            to {
                transform: translateY(0);
            }
        }

        #chatbot-header {
            background: linear-gradient(90deg, #2563eb, #1e40af); /* Match navbar gradient */
            color: #fff;
            padding: 14px 20px;
            border-radius: 16px 16px 0 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-weight: 600;
            font-size: 1.1rem;
            position: relative;
            overflow: hidden;
        }

        /* Add a subtle glow effect to header */
        #chatbot-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            animation: shine 3s infinite;
        }

        keyframes shine {
            0% {
                left: -100%;
            }
            50% {
                left: 100%;
            }
            100% {
                left: 100%;
            }
        }

        #chatbot-body {
            max-height: 450px; /* Slightly taller */
            overflow-y: auto;
            padding: 20px;
            background: #fff; /* Cleaner white background */
        }

        #chatbot-input {
            border-top: 1px solid #e5e7eb;
            padding: 16px;
            display: flex;
            gap: 8px;
            background: #f9fafb;
            border-radius: 0 0 16px 16px;
        }

        #chatbot-input input {
            flex-grow: 1;
            border: 1px solid #e5e7eb;
            border-radius: 12px;
            padding: 10px 14px;
            outline: none;
            transition: border-color 0.3s;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        #chatbot-input input:focus {
            border-color: #2563eb;
        }

        #chatbot-input button {
            background: #2563eb;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 12px;
            font-weight: 500;
            font-size: 0.9rem;
            transition: background 0.3s;
        }

        #chatbot-input button:hover {
            background: #1e40af;
        }

        .chat-message {
            margin: 8px 0;
            padding: 12px 16px;
            border-radius: 16px;
            font-size: 0.9rem;
            line-height: 1.4;
            position: relative;
            margin-bottom: 12px;
            animation: fadeIn 0.3s ease; /* Fade-in for new messages */
        }

        keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .user-message {
            background: #2563eb;
            color: #fff;
            margin-left: 20%;
            border-bottom-right-radius: 4px; /* Slightly flattened corner */
        }

        .bot-message {
            background: #f1f5f9; /* Softer gray for bot messages */
            color: #1f2937;
            margin-right: 20%;
            border-bottom-left-radius: 4px;
        }

        /* Timestamp */
        .chat-timestamp {
            font-size: 0.75rem;
            color: #6b7280;
            margin-top: 4px;
            text-align: right;
        }

        /* Typing Indicator */
        .typing-indicator {
            display: none;
            padding: 12px;
            margin-right: 20%;
        }

        .typing-indicator span {
            display: inline-block;
            width: 8px;
            height: 8px;
            background: #2563eb;
            border-radius: 50%;
            margin: 0 2px;
            animation: bounce 0.6s infinite alternate;
        }

        .typing-indicator span:nth-child(2) {
            animation-delay: 0.2s;
        }

        .typing-indicator span:nth-child(3) {
            animation-delay: 0.4s;
        }

        keyframes bounce {
            to {
                transform: translateY(-6px);
            }
        }

        /* Quick Reply Buttons */
        .quick-reply {
            display: inline-block;
            background: #e5e7eb;
            color: #1f2937;
            padding: 6px 12px;
            margin: 4px;
            border-radius: 12px;
            cursor: pointer;
            transition: background 0.3s;
        }

        .quick-reply:hover {
            background: #2563eb;
            color: #fff;
        }

        #chatbot-toggle {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: linear-gradient(90deg, #2563eb, #1e40af);
            color: #fff;
            border-radius: 50%;
            width: 60px;
            height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            z-index: 1000;
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
            transition: transform 0.3s;
        }

        #chatbot-toggle:hover {
            transform: scale(1.15);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.4);
        }

        /* Footer Styling */
        .footer {
            background: #1f2937;
            color: #fff;
            padding: 2rem 0;
            margin-top: 2rem;
        }

        .footer a {
            color: #facc15;
            text-decoration: none;
            transition: color 0.3s;
        }

        .footer a:hover {
            color: #fff;
        }

        /* Responsive Adjustments */
        media (max-width: 576px) {
            #chatbot-container {
                width: 95%;
                bottom: 15px;
                right: 15px;
            }

            #chatbot-body {
                max-height: 350px; /* Shorter for smaller screens */
            }

            .navbar-brand {
                font-size: 1.25rem;
            }

            .navbar-logo {
                height: 30px;
                width: 30px; /* Maintain equal dimensions */
            }
        }
    </style>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">
                    <img src="~/images/logo.png" alt="ZAH DROPSHIPPING Circular Logo" class="navbar-logo" />
                    ZAH DROPSHIPPING
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        @if (User.Identity.IsAuthenticated)
                        {
                            @if (User.IsInRole("Supplier"))
                            {
                                <li class="nav-item">
                                    <a class="nav-link" asp-area="Supplier" asp-controller="Dashboard" asp-action="Index">Dashboard</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" asp-area="Supplier" asp-controller="OrderManagement" asp-action="Index">Orders</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" asp-area="Supplier" asp-controller="Product" asp-action="Index">Products</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" asp-area="Supplier" asp-controller="Product" asp-action="StockOverview">Stock Overview</a>
                                </li>
                            }
                            else if (User.IsInRole("DropShipper"))
                            {
                                <li class="nav-item">
                                    <a class="nav-link" asp-area="DropShipper" asp-controller="Dashboard" asp-action="Index">Dashboard</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" asp-area="DropShipper" asp-controller="Order" asp-action="Index">Orders</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" asp-area="DropShipper" asp-controller="Order" asp-action="Create">New Order</a>
                                </li>
                            }
                        }
                    </ul>
                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>
    </header>

    <div class="container main-content">
        <main role="main">
            @RenderBody()
        </main>
    </div>

    <!-- Chatbot Widget -->
    <div id="chatbot-toggle">
        <i class="fas fa-comment fa-lg"></i>
    </div>
    <div id="chatbot-container">
        <div id="chatbot-header">
            <span>ZAH Assistant</span>
            <i class="fas fa-times" id="chatbot-close"></i>
        </div>
        <div id="chatbot-body">
            <!-- Messages will be appended here -->
        </div>
        <div id="chatbot-input">
            <input type="text" id="chatbot-message" placeholder="Ask me anything..." />
            <button onclick="sendMessage()">Send</button>
        </div>
    </div>

    <!-- Footer -->
    @if (!User.Identity.IsAuthenticated)
    {
        <footer class="footer">
            <div class="container">
                <div class="row">
                    <div class="col-md-4 mb-3">
                        <h5 class="font-bold">ZAH DROPSHIPPING</h5>
                        <p class="text-sm">Your one-stop platform for seamless dropshipping and supplier management.</p>
                    </div>
                    <div class="col-md-4 mb-3">
                        <h5 class="font-bold">Quick Links</h5>
                        <ul class="list-unstyled">
                            <li><a href="/">Home</a></li>
                            <li><a href="/Home/Privacy">Privacy Policy</a></li>
                            <li><a href="mailto:support@zahdropshipping.com">Contact Support</a></li>
                        </ul>
                    </div>
                    <div class="col-md-4 mb-3">
                        <h5 class="font-bold">Connect With Us</h5>
                        <div class="d-flex gap-3">
                            <a href="#"><i class="fab fa-facebook fa-lg"></i></a>
                            <a href="#"><i class="fab fa-twitter fa-lg"></i></a>
                            <a href="#"><i class="fab fa-instagram fa-lg"></i></a>
                        </div>
                    </div>
                </div>
                <div class="text-center mt-4">
                    <p class="mb-0">© @DateTime.Now.Year - ZAH DROPSHIPPING</p>
                </div>
            </div>
        </footer>
    }

    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <!-- Bootstrap 5.3.3 JS Bundle -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <!-- Custom JS -->
    <script src="~/js/site.js" asp-append-version="true"></script>
    <!-- Chatbot JS -->
    <script>
        $(document).ready(function () {
            let waitingForOrderNumber = false;
            const chatbotBody = $('#chatbot-body');

            // Load chat history from localStorage
            function loadChatHistory() {
                const history = JSON.parse(localStorage.getItem('chatHistory')) || [];
                history.forEach(msg => {
                    if (msg.type === 'user') {
                        appendUserMessage(msg.text, msg.timestamp);
                    } else if (msg.type === 'bot') {
                        appendBotMessage(msg.text, msg.timestamp);
                    } else if (msg.type === 'quick-replies') {
                        appendQuickReplies(msg.options, msg.timestamp);
                    }
                });
                scrollToBottom();
            }

            // Save message to localStorage
            function saveMessage(type, text, timestamp, options = null) {
                const history = JSON.parse(localStorage.getItem('chatHistory')) || [];
                history.push({ type, text, timestamp, options });
                localStorage.setItem('chatHistory', JSON.stringify(history));
            }

            // Toggle chatbot visibility
            $('#chatbot-toggle').click(function () {
                $('#chatbot-container').show();
                $('#chatbot-toggle').hide();
                if (!chatbotBody.children().length) {
                    setTimeout(() => {
                        const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
                        appendBotMessage('Hi! Welcome to ZAH DROPSHIPPING! How can I assist you?', timestamp);
                        appendQuickReplies(['Track Order', 'Top Products', 'Support', 'FAQs'], timestamp);
                        saveMessage('bot', 'Hi! Welcome to ZAH DROPSHIPPING! How can I assist you?', timestamp);
                        saveMessage('quick-replies', null, timestamp, ['Track Order', 'Top Products', 'Support', 'FAQs']);
                    }, 500);
                }
                scrollToBottom();
            });

            $('#chatbot-close').click(function () {
                $('#chatbot-container').hide();
                $('#chatbot-toggle').show();
            });

            // Append user message
            function appendUserMessage(message, timestamp) {
                chatbotBody.append(`
                    <div class="chat-message user-message">${message}</div>
                    <div class="chat-timestamp">${timestamp}</div>
                `);
                scrollToBottom();
            }

            // Append bot message
            function appendBotMessage(message, timestamp) {
                chatbotBody.find('.typing-indicator').remove();
                chatbotBody.append(`
                    <div class="chat-message bot-message">${message}</div>
                    <div class="chat-timestamp">${timestamp}</div>
                `);
                scrollToBottom();
            }

            // Append quick reply buttons
            function appendQuickReplies(options, timestamp) {
                const buttons = options.map(opt => `<span class="quick-reply" onclick="handleQuickReply('${opt}')">${opt}</span>`).join('');
                chatbotBody.append(`
                    <div class="chat-message bot-message">${buttons}</div>
                    <div class="chat-timestamp">${timestamp}</div>
                `);
                scrollToBottom();
            }

            // Show typing indicator
            function showTypingIndicator() {
                chatbotBody.append(`
                    <div class="typing-indicator">
                        <span></span><span></span><span></span>
                    </div>
                `);
                scrollToBottom();
            }

            // Scroll to bottom of chat
            function scrollToBottom() {
                chatbotBody.scrollTop(chatbotBody[0].scrollHeight);
            }

            // Handle quick reply clicks
            window.handleQuickReply = function (option) {
                const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
                appendUserMessage(option, timestamp);
                saveMessage('user', option, timestamp);
                handleMessage(option.toLowerCase(), timestamp);
            };

            // Send message
            function sendMessage() {
                const input = $('#chatbot-message');
                const message = input.val().trim();
                if (!message) return;

                const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
                appendUserMessage(message, timestamp);
                saveMessage('user', message, timestamp);
                input.val('');
                handleMessage(message.toLowerCase(), timestamp);
            }

            // Handle message logic
            function handleMessage(message, timestamp) {
                showTypingIndicator();
                setTimeout(() => {
                    if (waitingForOrderNumber) {
                        $.ajax({
                            url: '/Home/GetOrderStatus',
                            type: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify({ orderNumber: message }),
                            success: function (data) {
                                appendBotMessage(data.response, timestamp);
                                saveMessage('bot', data.response, timestamp);
                                appendQuickReplies(['Track Another Order', 'Top Products', 'Support'], timestamp);
                                saveMessage('quick-replies', null, timestamp, ['Track Another Order', 'Top Products', 'Support']);
                                waitingForOrderNumber = false;
                            },
                            error: function (xhr, status, error) {
                                console.error('Error checking order status:', error);
                                appendBotMessage('Error checking order status. Please try again.', timestamp);
                                saveMessage('bot', 'Error checking order status. Please try again.', timestamp);
                                waitingForOrderNumber = false;
                            }
                        });
                    } else if (message.includes('product') || message.includes('item') || message === 'top products') {
                        $.ajax({
                            url: '/Home/GetTopProducts',
                            type: 'GET',
                            success: function (data) {
                                console.log('Top Products Response:', data); // Debug log
                                const response = data.length > 0
                                    ? 'Here are our top products:<br>' + data.map(p => `- ${p.name} ($${p.price})`).join('<br>')
                                    : 'No top products available at the moment.';
                                appendBotMessage(response, timestamp);
                                saveMessage('bot', response, timestamp);
                                appendQuickReplies(['View More Products', 'Track Order', 'Support'], timestamp);
                                saveMessage('quick-replies', null, timestamp, ['View More Products', 'Track Order', 'Support']);
                            },
                            error: function (xhr, status, error) {
                                console.error('Error fetching products:', error); // Debug log
                                appendBotMessage('Error fetching products. Please try again.', timestamp);
                                saveMessage('bot', 'Error fetching products. Please try again.', timestamp);
                            }
                        });
                    } else if (message.includes('order') || message.includes('track') || message === 'track order' || message === 'track another order') {
                        waitingForOrderNumber = true;
                        appendBotMessage('Please provide your order number.', timestamp);
                        saveMessage('bot', 'Please provide your order number.', timestamp);
                    } else if (message.includes('support') || message.includes('help') || message === 'support') {
                        const response = 'Contact our support team at <a href="mailto:support@zahdropshipping.com">support@zahdropshipping.com</a> or ask about products or orders!';
                        appendBotMessage(response, timestamp);
                        saveMessage('bot', response, timestamp);
                        appendQuickReplies(['Track Order', 'Top Products', 'FAQs'], timestamp);
                        saveMessage('quick-replies', null, timestamp, ['Track Order', 'Top Products', 'FAQs']);
                    } else if (message.includes('faq') || message === 'faqs') {
                        const response = 'Common FAQs:<br>- How do I track my order? Provide your order number.<br>- What are your top products? Ask for "Top Products".<br>- Need help? Contact <a href="mailto:support@zahdropshipping.com">support</a>.';
                        appendBotMessage(response, timestamp);
                        saveMessage('bot', response, timestamp);
                        appendQuickReplies(['Track Order', 'Top Products', 'Support'], timestamp);
                        saveMessage('quick-replies', null, timestamp, ['Track Order', 'Top Products', 'Support']);
                    } else if (message.includes('supplier') || message.includes('vendor')) {
                        appendBotMessage('We work with verified suppliers. Check out our products or contact support for supplier details!', timestamp);
                        saveMessage('bot', 'We work with verified suppliers. Check out our products or contact support for supplier details!', timestamp);
                        appendQuickReplies(['Top Products', 'Support'], timestamp);
                        saveMessage('quick-replies', null, timestamp, ['Top Products', 'Support']);
                    } else if (message.includes('hi') || message.includes('hello')) {
                        appendBotMessage('Hey there! How can I assist you today?', timestamp);
                        saveMessage('bot', 'Hey there! How can I assist you today?', timestamp);
                        appendQuickReplies(['Track Order', 'Top Products', 'Support', 'FAQs'], timestamp);
                        saveMessage('quick-replies', null, timestamp, ['Track Order', 'Top Products', 'Support', 'FAQs']);
                    } else if (message === 'clear history') {
                        localStorage.removeItem('chatHistory');
                        chatbotBody.empty();
                        appendBotMessage('Chat history cleared. How can I help you now?', timestamp);
                        saveMessage('bot', 'Chat history cleared. How can I help you now?', timestamp);
                        appendQuickReplies(['Track Order', 'Top Products', 'Support', 'FAQs'], timestamp);
                        saveMessage('quick-replies', null, timestamp, ['Track Order', 'Top Products', 'Support', 'FAQs']);
                    } else {
                        appendBotMessage('Sorry, I didn’t understand that. Try asking about products, orders, support, or FAQs!', timestamp);
                        saveMessage('bot', 'Sorry, I didn’t understand that. Try asking about products, orders, support, or FAQs!', timestamp);
                        appendQuickReplies(['Track Order', 'Top Products', 'Support', 'FAQs'], timestamp);
                        saveMessage('quick-replies', null, timestamp, ['Track Order', 'Top Products', 'Support', 'FAQs']);
                    }
                }, 1000); // Simulate typing delay
            }

            // Send message on Enter key
            $('#chatbot-message').keypress(function (e) {
                if (e.key === 'Enter') sendMessage();
            });

            // Load chat history on page load
            loadChatHistory();
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>