@using DropShipProject.Models
@model List<SupplierProductsViewModel>
@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* Store Header */
    .store-header {
        color: #1f2937;
        font-weight: 700;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }

    /* Supplier Title */
    .supplier-title {
        color: #1f2937;
        font-weight: 600;
        border-left: 4px solid #2563eb;
        padding-left: 12px;
        margin-bottom: 24px;
    }

    /* Product Card */
    .product-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border: none;
        border-radius: 12px;
        overflow: hidden;
        background: #ffffff;
    }

        .product-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
        }

    .product-img {
        width: 100%;
        height: 200px;
        object-fit: contain;
        object-position: center;
        transition: transform 0.3s ease;
        background-color: #f9fafb;
    }

    .product-card:hover .product-img {
        transform: scale(1.05);
    }

    .card-body {
        padding: 16px;
    }

    .card-title {
        font-size: 1.125rem;
        color: #1f2937;
        margin-bottom: 12px;
        font-weight: 600;
    }

    .card-text {
        color: #4b5563;
        font-size: 0.875rem;
        line-height: 1.5;
    }

    .card-footer {
        padding: 0 16px 16px;
    }

    /* Filter Section */
    .filter-section {
        background: #ffffff;
        border-radius: 12px;
        padding: 20px;
        margin-bottom: 32px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

        .filter-section label {
            font-weight: 500;
            color: #1f2937;
        }

        .filter-section input,
        .filter-section select {
            border-radius: 8px;
            border: 1px solid #d1d5db;
            transition: border-color 0.3s, box-shadow 0.3s;
        }

            .filter-section input:focus,
            .filter-section select:focus {
                border-color: #2563eb;
                box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
            }

    /* No Products */
    .no-products {
        background: #f3f4f6;
        border-radius: 12px;
        padding: 24px;
        font-size: 1rem;
        color: #4b5563;
        text-align: center;
    }
</style>

<div class="container my-5">
    <h1 class="store-header mb-5 text-center text-3xl">Welcome to Our Store</h1>

    <!-- Filter Section -->
    <div class="filter-section">
        <form asp-action="Index" method="get">
            <div class="row g-3 align-items-end">
                <div class="col-md-2">
                    <label for="search" class="form-label">Search</label>
                    <input type="text" id="search" name="search" class="form-control" placeholder="Name or SKU" value="@ViewData["Search"]">
                </div>
                <div class="col-md-2">
                    <label for="sortBy" class="form-label">Sort By</label>
                    <select id="sortBy" name="sortBy" class="form-select">
                        <option value="">Select...</option>
                        <option value="price" selected="@(ViewData["SortBy"]?.ToString() == "price")">Price</option>
                        <option value="name" selected="@(ViewData["SortBy"]?.ToString() == "name")">Name</option>
                        <option value="stock" selected="@(ViewData["SortBy"]?.ToString() == "stock")">Stock</option>
                        <option value="sku" selected="@(ViewData["SortBy"]?.ToString() == "sku")">SKU</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label for="sortOrder" class="form-label">Sort Order</label>
                    <select id="sortOrder" name="sortOrder" class="form-select">
                        <option value="asc" selected="@(ViewData["SortBy"]?.ToString() == "asc")">Ascending</option>
                        <option value="desc" selected="@(ViewData["SortBy"]?.ToString() == "desc")">Descending</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label for="minPrice" class="form-label">Min Price</label>
                    <input type="number" id="minPrice" name="minPrice" class="form-control" step="0.01" min="0" value="@ViewData["MinPrice"]">
                </div>
                <div class="col-md-2">
                    <label for="maxPrice" class="form-label">Max Price</label>
                    <input type="number" id="maxPrice" name="maxPrice" class="form-control" step="0.01" min="0" value="@ViewData["MaxPrice"]">
                </div>
                <div class="col-md-1">
                    <button type="submit" class="btn btn-primary bg-blue-600 hover:bg-blue-700 text-white rounded-lg w-100 py-2">Filter</button>
                </div>
                <div class="col-md-1">
                    <a href="@Url.Action("Index")" class="btn btn-secondary bg-gray-600 hover:bg-gray-700 text-white rounded-lg w-100 py-2">Reset</a>
                </div>
            </div>
        </form>
    </div>

    <!-- Recommended Section -->
    @{
        var recommendedProducts = ViewData["RecommendedProducts"] as List<Product>;
    }
    @if (recommendedProducts != null && recommendedProducts.Any())
    {
        <h2 class="supplier-title text-xl mb-4">Recommended Products</h2>
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4 mb-5">
            @foreach (var product in recommendedProducts)
            {
                <div class="col">
                    <div class="product-card h-100">
                        <div class="overflow-hidden">
                            @if (!string.IsNullOrEmpty(product.ProductPicture))
                            {
                                <img src="@product.ProductPicture" class="product-img" alt="@product.Name">
                            }
                            else
                            {
                                <img src="/images/placeholder.jpg" class="product-img" alt="No image available">
                            }
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text">
                                <strong>Price:</strong> @product.Price.ToString("F2")<br />
                                <strong>Stock:</strong> @product.Stock units<br />
                                <strong>SKU:</strong> @product.SKU
                            </p>
                        </div>
                        <div class="card-footer bg-transparent border-0 text-center">
                            <a href="@Url.Action("Details", "Home", new { id = product.Id })" class="btn btn-primary bg-blue-600 hover:bg-blue-700 text-white rounded-lg py-2 px-4">View Details</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }

    <!-- Supplier-Grouped Products -->
    @if (Model == null || !Model.Any())
    {
        <div class="no-products">
            No products available at the moment. Check back soon!
        </div>
    }
    else
    {
        @foreach (var supplierGroup in Model)
        {
            <h2 class="supplier-title text-xl mb-4">Products by @supplierGroup.SupplierName</h2>
            <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4 mb-5">
                @foreach (var product in supplierGroup.Products)
                {
                    <div class="col">
                        <div class="product-card h-100">
                            <div class="overflow-hidden">
                                @if (!string.IsNullOrEmpty(product.ProductPicture))
                                {
                                    <img src="@product.ProductPicture" class="product-img" class="product-img" alt="@product.Name">
                                }
                                else
                                {
                                    <img src="/images/placeholder.jpg" class="product-img" alt="No image available">
                                }
                            </div>
                            <div class="card-body">
                                <h5 class="card-title">@product.Name</h5>
                                <p class="card-text">
                                    <strong>Price:</strong> $@product.Price.ToString("F2")<br />
                                    <strong>Stock:</strong> @product.Stock units<br />
                                    <strong>SKU:</strong> @product.SKU
                                </p>
                            </div>
                            <div class="card-footer bg-transparent border-0 text-center">
                                <a href="@Url.Action("Details", "Home", new { id = product.Id })" class="btn btn-primary bg-blue-600 hover:bg-blue-700 text-white rounded-lg py-2 px-4">View Details</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    }
</div>