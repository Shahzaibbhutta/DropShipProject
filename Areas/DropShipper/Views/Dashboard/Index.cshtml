@using DropShipProject.Models
@model List<Order>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Drop Shipper Dashboard";
}

<style>
    /* General Styling */
    .container {
        max-width: 1400px;
    }

    h2, h3 {
        color: #1f2937;
        font-weight: 600;
        letter-spacing: 0.025rem;
    }

    /* Summary Cards */
    .card {
        border: none;
        border-radius: 12px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .card:hover {
        transform: translateY(-4px);
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
    }

    .card-header {
        font-weight: 600;
        border-bottom: none;
        background: transparent;
        color: #ffffff;
        padding: 16px;
    }

    .card-body {
        padding: 20px;
    }

    .card-title {
        font-size: 1.5rem;
        font-weight: 700;
        color: #ffffff;
    }

    /* Chart Containers */
    .chart-container {
        background: #ffffff;
        border-radius: 12px;
        padding: 20px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 400px;
        height: 400px;
        margin: 0 auto;
    }

    .chart-container canvas {
        width: 100% !important;
        height: 100% !important;
    }

    /* Table */
    .table-responsive {
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .table th {
        font-weight: 600;
        background-color: #1f2937;
        color: #ffffff;
    }

    .table td {
        vertical-align: middle;
        color: #4b5563;
    }

    .badge {
        font-size: 0.75rem;
        padding: 0.35em 0.75em;
        border-radius: 9999px;
    }

    /* Responsive Adjustments */
    media (max-width: 767px) {
        .chart-container {
            max-width: 100%;
            height: 300px;
        }
    }
</style>

<div class="container my-5">
    <h2 class="mb-5 text-3xl">DropShipper Dashboard</h2>

    <!-- Summary Cards -->
    <div class="row g-4 mb-5">
        <div class="col-md-4">
            <div class="card text-white bg-blue-600 hover:bg-blue-700 shadow-lg">
                <div class="card-header">Pending Orders</div>
                <div class="card-body">
                    <h5 class="card-title">@Model.Count(o => o.Status == "Pending")</h5>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-green-600 hover:bg-green-700 shadow-lg">
                <div class="card-header">Completed Orders</div>
                <div class="card-body">
                    <h5 class="card-title">@Model.Count(o => o.Status == "Delivered")</h5>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-gray-600 hover:bg-gray-700 shadow-lg">
                <div class="card-header">Total Orders</div>
                <div class="card-body">
                    <h5 class="card-title">@Model.Count()</h5>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Section -->
    <h3 class="mt-5 mb-4 text-xl">Order Analytics</h3>
    <div class="row g-4 justify-content-center">
        <div class="col-md-6 col-lg-4">
            <div class="chart-container">
                <canvas id="statusBarChart"></canvas>
            </div>
        </div>
        <div class="col-md-6 col-lg-4">
            <div class="chart-container">
                <canvas id="statusPieChart"></canvas>
            </div>
        </div>
        <div class="col-md-6 col-lg-4">
            <div class="chart-container">
                <canvas id="amountLineChart"></canvas>
            </div>
        </div>
    </div>

    <!-- Recent Orders Table -->
    <h3 class="mt-5 mb-4 text-xl">Recent Orders</h3>
    <div class="table-responsive">
        <table class="table table-hover table-bordered align-middle">
            <thead>
                <tr>
                    <th scope="col">Order #</th>
                    <th scope="col">Supplier</th>
                    <th scope="col">Date</th>
                    <th scope="col">Amount</th>
                    <th scope="col">Status</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model.Take(5))
                {
                    <tr>
                        <td>@order.OrderNumber</td>
                        <td>@(order.Supplier?.CompanyName ?? "N/A")</td>
                        <td>@order.OrderDate.ToString("d")</td>
                        <td>@order.TotalAmount.ToString("C", new System.Globalization.CultureInfo("pk-PK"))</td>
                        <td>
                            <span class="badge @GetStatusBadgeClass(order.Status)">
                                @order.Status
                            </span>
                        </td>
                        <td>
                            <a asp-area="DropShipper" asp-action="Details" asp-controller="Order" asp-route-id="@order.Id" class="btn btn-sm btn-info bg-blue-600 hover:bg-blue-700 text-white rounded-lg">View</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
    <script>
        // PKR formatter
        const pkrFormatter = new Intl.NumberFormat('en-PK', {
            style: 'currency',
            currency: 'PKR',
            minimumFractionDigits: 0
        });

        $(document).ready(function () {
            fetchOrdersByStatus();
            fetchOrderAmountOverTime();
            fetchOrderStatusDistribution();

            function fetchOrdersByStatus() {
                $.ajax({
                    url: '@Url.Action("GetOrdersByStatus", "Dashboard", new { area = "DropShipper" })',
                    type: 'GET',
                    success: function (data) {
                        renderBarChart(data);
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching orders by status:', error);
                    }
                });
            }

            function fetchOrderAmountOverTime() {
                $.ajax({
                    url: '@Url.Action("GetOrderAmountOverTime", "Dashboard", new { area = "DropShipper" })',
                    type: 'GET',
                    success: function (data) {
                        renderLineChart(data);
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching order amount over time:', error);
                    }
                });
            }

            function fetchOrderStatusDistribution() {
                $.ajax({
                    url: '@Url.Action("GetOrderStatusDistribution", "Dashboard", new { area = "DropShipper" })',
                    type: 'GET',
                    success: function (data) {
                        renderPieChart(data);
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching order status distribution:', error);
                    }
                });
            }

            function renderBarChart(data) {
                const ctx = document.getElementById('statusBarChart').getContext('2d');
                new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: ['Pending', 'Processing', 'Shipped', 'Delivered', 'Return', 'Cancelled'],
                        datasets: [{
                            label: 'Order Count',
                            data: [
                                data.pending || 0,
                                data.processing || 0,
                                data.shipped || 0,
                                data.delivered || 0,
                                data.return || 0,
                                data.cancelled || 0
                            ],
                            backgroundColor: [
                                '#facc15', /* Yellow for Pending */
                                '#06b6d4', /* Cyan for Processing */
                                '#22c55e', /* Green for Shipped */
                                '#2563eb', /* Blue for Delivered */
                                '#6b7280', /* Gray for Return */
                                '#ef4444'  /* Red for Cancelled */
                            ],
                            borderColor: '#ffffff',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        plugins: {
                            title: {
                                display: true,
                                text: 'Orders by Status',
                                font: { size: 16, weight: 'bold' },
                                padding: { top: 10, bottom: 20 },
                                color: '#1f2937'
                            },
                            legend: { display: false }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'Number of Orders',
                                    font: { size: 12 },
                                    color: '#1f2937'
                                },
                                grid: { color: '#e5e7eb' },
                                ticks: { color: '#4b5563' }
                            },
                            x: {
                                grid: { display: false },
                                ticks: { color: '#4b5563' }
                            }
                        },
                        maintainAspectRatio: false
                    }
                });
            }

            function renderLineChart(data) {
                const ctx = document.getElementById('amountLineChart').getContext('2d');
                new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: data.map(item => item.date),
                        datasets: [{
                            label: 'Total Amount (PKR)',
                            data: data.map(item => item.totalAmount),
                            borderColor: '#2563eb',
                            backgroundColor: 'rgba(37, 99, 235, 0.2)',
                            fill: true,
                            tension: 0.4
                        }]
                    },
                    options: {
                        plugins: {
                            title: {
                                display: true,
                                text: 'Order Amount Over Time (PKR)',
                                font: { size: 16, weight: 'bold' },
                                padding: { top: 10, bottom: 20 },
                                color: '#1f2937'
                            },
                            legend: {
                                display: true,
                                position: 'top',
                                labels: { font: { size: 12 }, color: '#4b5563' }
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'Total Amount (PKR)',
                                    font: { size: 12 },
                                    color: '#1f2937'
                                },
                                ticks: {
                                    callback: function (value) {
                                        return pkrFormatter.format(value);
                                    },
                                    color: '#4b5563'
                                },
                                grid: { color: '#e5e7eb' }
                            },
                            x: {
                                title: {
                                    display: true,
                                    text: 'Date',
                                    font: { size: 12 },
                                    color: '#1f2937'
                                },
                                grid: { display: false },
                                ticks: { color: '#4b5563' }
                            }
                        },
                        maintainAspectRatio: false
                    }
                });
            }

            function renderPieChart(data) {
                const ctx = document.getElementById('statusPieChart').getContext('2d');
                new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: ['Pending', 'Processing', 'Shipped', 'Delivered', 'Return', 'Cancelled'],
                        datasets: [{
                            data: [
                                data.pending || 0,
                                data.processing || 0,
                                data.shipped || 0,
                                data.delivered || 0,
                                data.return || 0,
                                data.cancelled || 0
                            ],
                            backgroundColor: [
                                '#facc15', /* Yellow for Pending */
                                '#06b6d4', /* Cyan for Processing */
                                '#22c55e', /* Green for Shipped */
                                '#2563eb', /* Blue for Delivered */
                                '#6b7280', /* Gray for Return */
                                '#ef4444'  /* Red for Cancelled */
                            ],
                            borderColor: '#ffffff',
                            borderWidth: 2
                        }]
                    },
                    options: {
                        plugins: {
                            title: {
                                display: true,
                                text: 'Order Status Distribution',
                                font: { size: 16, weight: 'bold' },
                                padding: { top: 10, bottom: 20 },
                                color: '#1f2937'
                            },
                            legend: {
                                position: 'bottom',
                                labels: { font: { size: 11 }, color: '#4b5563' }
                            }
                        },
                        maintainAspectRatio: false
                    }
                });
            }
        });
    </script>
}

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Pending" => "bg-yellow-400 text-gray-900",
            "Processing" => "bg-cyan-500 text-gray-900",
            "Shipped" => "bg-green-500 text-white",
            "Delivered" => "bg-blue-600 text-white",
            "Return" => "bg-gray-500 text-white",
            "Cancelled" => "bg-red-500 text-white",
            _ => "bg-gray-500 text-white"
        };
    }
}