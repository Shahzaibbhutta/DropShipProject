@using DropShipProject.Models
@model List<Order>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "My Orders";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<div class="container my-4">
    <h2 class="mb-4 text-primary">My Orders</h2>

    <div class="mb-3">
        <label class="fw-bold me-2">Filter by Status:</label>
        @foreach (var status in new[] { "Pending", "Processing", "Shipped", "Delivered", "Return", "Cancelled" })
        {
            <div class="form-check form-check-inline">
                <input class="form-check-input status-filter" type="checkbox" value="@status" id="@status">
                <label class="form-check-label" for="@status">@status</label>
            </div>
        }
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-hover border">
            <thead class="table-dark">
                <tr>
                    <th>Order #</th>
                    <th>Supplier</th>
                    <th>Date</th>
                    <th>Amount</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="orderTableBody">
                @foreach (var order in Model)
                {
                    <tr>
                        <td>@order.OrderNumber</td>
                        <td>@order.Supplier.CompanyName</td>
                        <td>@order.OrderDate.ToString("d")</td>
                        <td>@order.TotalAmount</td>
                        <td>
                            <span class="badge @GetStatusBadgeClass(order.Status)">
                                @order.Status
                            </span>
                        </td>
                        <td>
                            <a asp-action="Details" asp-route-id="@order.Id" class="btn btn-sm btn-info text-white">
                                <i class="bi bi-eye"></i> View
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.status-filter').change(function () {
                var selectedStatuses = $('.status-filter:checked').map(function () {
                    return this.value;
                }).get();

                $.ajax({
                    url: '@Url.Action("FilterByStatus", "Order", new { area = "DropShipper" })',
                    type: 'GET',
                    traditional: true,
                    data: { statuses: selectedStatuses },
                    success: function (orders) {
                        var rows = '';
                        if (orders.length === 0) {
                            rows = '<tr><td colspan="6" class="text-center text-muted">No matching orders found.</td></tr>';
                        } else {
                            orders.forEach(function (order) {
                                rows += `<tr>
                                            <td>${order.orderNumber}</td>
                                            <td>${order.supplierCompanyName}</td>
                                            <td>${new Date(order.orderDate).toLocaleDateString()}</td>
                                            <td>${order.totalAmount}</td>
                                            <td><span class="badge ${getBadgeClass(order.status)}">${order.status}</span></td>
                                            <td><a href="/DropShipper/Order/Details/${order.id}" class="btn btn-sm btn-info text-white"><i class="bi bi-eye"></i> View</a></td>
                                        </tr>`;
                            });
                        }
                        $('#orderTableBody').html(rows);
                    },
                    error: function () {
                        alert('Failed to load filtered orders.');
                    }
                });
            });

            function getBadgeClass(status) {
                switch (status) {
                    case 'Pending': return 'bg-warning text-dark';
                    case 'Processing': return 'bg-info text-white';
                    case 'Shipped': return 'bg-success';
                    case 'Delivered': return 'bg-primary';
                    case 'Return': return 'bg-secondary';
                    case 'Cancelled': return 'bg-danger';
                    default: return 'bg-secondary';
                }
            }
        });
    </script>
}

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Pending" => "bg-warning text-dark",
            "Processing" => "bg-info text-white",
            "Shipped" => "bg-success",
            "Delivered" => "bg-primary",
            "Return" => "bg-secondary",
            "Cancelled" => "bg-danger",
            _ => "bg-secondary"
        };
    }
}
