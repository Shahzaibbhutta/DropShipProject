@using DropShipProject.Models
@model Order

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Order Details";
}

<style>
    /* General Styling */
    .container {
        max-width: 1200px;
    }

    h2, h4 {
        color: #1f2937;
        font-weight: 600;
    }

    /* Cards */
    .order-card, .items-card {
        background: #ffffff;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .order-card:hover, .items-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
    }

    .card-header {
        background: #2563eb;
        color: #ffffff;
        font-weight: 600;
        border-radius: 12px 12px 0 0;
        padding: 16px;
    }

    .card-body {
        padding: 20px;
    }

    /* Definition List */
    .order-details dt {
        color: #1f2937;
        font-weight: 500;
        font-size: 0.875rem;
    }

    .order-details dd {
        color: #4b5563;
        font-size: 0.875rem;
        margin-bottom: 12px;
    }

    /* Badges */
    .badge {
        font-size: 0.75rem;
        padding: 0.35em 0.75em;
        border-radius: 9999px;
        transition: transform 0.3s ease;
    }

    .badge:hover {
        transform: scale(1.1);
    }

    /* Table */
    .table-responsive {
        border-radius: 8px;
        overflow: hidden;
    }

    .table th {
        background: #1f2937;
        color: #ffffff;
        font-weight: 600;
    }

    .table td {
        color: #4b5563;
        vertical-align: middle;
    }

    .table tfoot {
        background: #f9fafb;
        font-weight: 600;
    }

    /* Buttons */
    .btn-back {
        background: #6b7280;
        color: #ffffff;
        border-radius: 8px;
        padding: 8px 16px;
        transition: background 0.3s ease;
    }

    .btn-back:hover {
        background: #4b5563;
    }

    /* Animations */
    .order-card, .items-card {
        animation: fadeIn 0.5s ease-in;
    }

    keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }

    /* Responsive Adjustments */
    media (max-width: 767px) {
        .order-details dt, .order-details dd {
            font-size: 0.75rem;
        }

        .table th, .table td {
            font-size: 0.75rem;
        }
    }
</style>

<div class="container my-5">
    <h2 class="mb-4 text-3xl">Order Details</h2>
    <div id="errorAlert" class="alert alert-danger d-none rounded-lg" role="alert"></div>

    <div class="row g-4">
        <!-- Order Summary Card -->
        <div class="col-lg-6">
            <div class="order-card">
                <div class="card-header">Order Summary</div>
                <div class="card-body">
                    <dl class="order-details row">
                        <dt class="col-sm-4">Order Number</dt>
                        <dd class="col-sm-8">@Model.OrderNumber</dd>

                        <dt class="col-sm-4">DropShipper</dt>
                        <dd class="col-sm-8">@(Model.DropShipper?.UserName ?? "N/A")</dd>

                        <dt class="col-sm-4">Date</dt>
                        <dd class="col-sm-8">@Model.OrderDate.ToString("d")</dd>

                        <dt class="col-sm-4">Total Amount</dt>
                        <dd class="col-sm-8">@Model.TotalAmount.ToString("C", new System.Globalization.CultureInfo("pk-PK"))</dd>

                        <dt class="col-sm-4">Status</dt>
                        <dd class="col-sm-8">
                            <span class="badge @GetStatusBadgeClass(Model.Status)">
                                @Model.Status
                            </span>
                        </dd>

                        <dt class="col-sm-4">Payment Method</dt>
                        <dd class="col-sm-8">@Model.PaymentMethod</dd>

                        <dt class="col-sm-4">Shipping Address</dt>
                        <dd class="col-sm-8">@Model.ShippingAddress</dd>

                        <dt class="col-sm-4">City</dt>
                        <dd class="col-sm-8">@Model.City</dd>

                        <dt class="col-sm-4">Notes</dt>
                        <dd class="col-sm-8">@(string.IsNullOrEmpty(Model.Notes) ? "None" : Model.Notes)</dd>
                    </dl>
                </div>
                <div class="card-footer bg-transparent border-0 p-3">
                    <a asp-area="DropShipper" asp-action="Index" asp-controller="Order" class="btn btn-back w-100">Back to Orders</a>
                </div>
            </div>
        </div>

        <!-- Order Items Card -->
        <div class="col-lg-6">
            <div class="items-card">
                <div class="card-header">Order Items</div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Quantity</th>
                                    <th>Unit Price</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.OrderItems)
                                {
                                    <tr>
                                        <td>@(item.Product?.Name ?? "N/A")</td>
                                        <td>@item.Quantity</td>
                                        <td>@item.UnitPrice</td>
                                        <td>@(item.Quantity * item.UnitPrice)</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="3" class="text-end">Grand Total:</td>
                                    <td class="text-end">@Model.TotalAmount</td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Pending" => "bg-yellow-400 text-gray-900",
            "Processing" => "bg-cyan-500 text-gray-900",
            "Shipped" => "bg-green-500 text-white",
            "Delivered" => "bg-blue-600 text-white",
            "Return" => "bg-gray-500 text-white",
            "Cancelled" => "bg-red-500 text-white",
            _ => "bg-gray-500 text-white"
        };
    }
}