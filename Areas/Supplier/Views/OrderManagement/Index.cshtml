@using DropShipProject.Models
@model List<Order>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Order Management";
}

<div class="container my-4">
    <h2 class="mb-4 text-primary">Order Management</h2>

    <div class="table-responsive">
        <table class="table table-bordered table-hover shadow-sm">
            <thead class="table-dark">
                <tr>
                    <th>Order #</th>
                    <th>DropShipper</th>
                    <th>Date</th>
                    <th>Amount</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model)
                {
                    <tr>
                        <td>@order.OrderNumber</td>
                        <td>@order.DropShipper.CompanyName</td>
                        <td>@order.OrderDate.ToString("d")</td>
                        <td>@order.TotalAmount.ToString("C")</td>
                        <td>
                            <span class="badge @GetStatusBadgeClass(order.Status)">
                                @order.Status
                            </span>
                        </td>
                        <td>
                            <div class="btn-group">
                                <a asp-area="Supplier" asp-controller="OrderManagement" asp-action="Details" asp-route-id="@order.Id" class="btn btn-sm btn-info">
                                    <i class="bi bi-eye"></i> View
                                </a>

                                <button type="button" class="btn btn-sm btn-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
                                    <span class="visually-hidden">Toggle Dropdown</span>
                                </button>

                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="#" onclick="updateStatus(@order.Id, 'Pending')">Pending</a></li>
                                    <li><a class="dropdown-item" href="#" onclick="updateStatus(@order.Id, 'Processing')">Processing</a></li>
                                    <li><a class="dropdown-item" href="#" onclick="updateStatus(@order.Id, 'Shipped')">Shipped</a></li>
                                    <li><a class="dropdown-item" href="#" onclick="updateStatus(@order.Id, 'Delivered')">Delivered</a></li>
                                    <li><a class="dropdown-item" href="#" onclick="updateStatus(@order.Id, 'Return')">Return</a></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li><a class="dropdown-item text-danger" href="#" onclick="updateStatus(@order.Id, 'Cancelled')">Cancelled</a></li>
                                </ul>
                            </div>

                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        function updateStatus(orderId, status) {
            $.ajax({
                url: '@Url.Action("UpdateStatus", "OrderManagement", new { area = "Supplier" })',
                type: 'POST',
                data: { orderId: orderId, status: status },
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                }
            })
                .done(function (response) {
                    if (response.success) {
                        location.reload();
                    } else {
                        console.error('Update failed:', response.message);
                        alert('Failed to update status: ' + response.message);
                    }
                })
                .fail(function (xhr, status, error) {
                    console.error('AJAX error:', error);
                    alert('Failed to update status: ' + error);
                });
        }
    </script>
}

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Pending" => "bg-warning text-dark",
            "Processing" => "bg-info text-white",
            "Shipped" => "bg-success",
            "Delivered" => "bg-primary",
            "Return" => "bg-secondary",
            "Cancelled" => "bg-danger",
            _ => "bg-secondary"
        };
    }
}